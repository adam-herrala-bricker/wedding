name: Deployment pipeline

on:
  push:
    branches:
      - main #only check on push to main (which requires a PR)
    paths:
      - 'frontend/**' ## only run deployment if there's been a change to the FE or BE (still runs PR tests though)
      - 'backend/**'
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  deployment_pipeline:
    runs-on: ubuntu-20.04
    env:
      ADMIN_KEY: ${{ secrets.ADMIN_KEY}}
      ADMIN_KEY_DEMO: ${{ secrets.ADMIN_KEY_DEMO}}
      BAD_ENTRY_TOKEN: ${{ secrets.BAD_ENTRY_TOKEN }}
      ENTRY_HASH: ${{ secrets.ENTRY_HASH }}
      ENTRY_KEY: ${{ secrets.ENTRY_KEY }}
      ENTRY_KEY_DEMO: ${{ secrets.ENTRY_KEY_DEMO}}
      PORT: ${{ secrets.PORT }}
      SECRET_ADMIN: ${{ secrets.SECRET_ADMIN }}
      SECRET_ADMIN_DEMO: ${ secrets.SECRET_ADMIN_DEMO}
      SECRET_ENTER: ${{ secrets.SECRET_ENTER }}
      SECRET_ENTER_DEMO: ${{ secrets.SECRET_ENTER_DEMO}}
      SECRET_USER: ${{ secrets.SECRET_USER }}
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.19' #both local machine and render are set to this too
      - name: Install frontend dependencies
        run: cd frontend && npm ci
      - name: Frontend style check
        run: cd frontend && npm run lint
      - name: Build production frontend
        run: cd frontend && npm run build
      - name: Install backend dependencies
        run: cd backend && npm ci
      - name: Backend style check
        run: cd backend && npm run lint
      - name: Create temporary media folder for testing
        run: cd backend && bash build_temp_media_folder.sh
      - name: Backend integration tests
        run: cd backend && npm run test
        if: ${{github.event_name == 'push' || !contains(github.event.pull_request.body, '#skipBE')}}
      - name: E2E tests
        run: bash run_E2E.sh
        if: ${{github.event_name == 'push' || !contains(github.event.pull_request.body, '#skipFE')}}
      - name: Deploy to production
        if: ${{ github.event_name == 'push'}} #only deploy on push (to main)
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK }}